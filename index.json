[{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"FAQ","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/faq/faq1/","tags":["docs","howto"],"title":"FAQ Page 1"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"FAQ Section 1","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/faq/section1/faq1-1/","tags":["faq"],"title":"FAQ Page 1.1"},{"categories":null,"contents":"Heading 1 Text Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla id ipsum sed enim euismod lobortis. Pellentesque facilisis efficitur eros vel feugiat. Donec vitae placerat neque, et venenatis felis. Mauris ultrices rhoncus ante non molestie. Donec fringilla gravida interdum. Pellentesque iaculis dolor a nisl iaculis, nec elementum sem efficitur. Nulla sed ante ac dolor egestas semper. Aliquam eget ligula et neque tristique blandit. Suspendisse sit amet eleifend felis.\nInteger placerat libero sit amet lorem egestas pulvinar. Proin maximus vestibulum ante, eget faucibus libero blandit ac. Maecenas imperdiet, turpis id euismod tempus, lectus purus consequat elit, ac dictum magna justo ullamcorper turpis. Ut dictum laoreet nibh, et malesuada tellus malesuada nec. Suspendisse nibh nisi, aliquet vel diam pretium, feugiat hendrerit risus. Proin sed sagittis nulla, vel feugiat dui. Cras mollis in sapien cursus egestas. Nullam vulputate ut arcu eget bibendum. Aliquam ligula mauris, placerat non mollis et, fringilla ac magna. Donec non est pellentesque, pellentesque dolor quis, tempor ipsum.\nAlert Note This is an alert box using Adobe Spectrum style.  Table Col1 Col2 Col3   8 10 50  8 10 500  8 10 50  8 10 500  8 10 50  8 10 500    Code package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math/rand\u0026#34; \u0026#34;time\u0026#34; ) type Moo struct { Cow int Sound string Tube chan bool } // A cow will moo until it is being milked func cow(num int, mootube chan Moo) { tube := make(chan bool) for { select { case mootube \u0026lt;- Moo{num, \u0026#34;moo\u0026#34;, tube}: fmt.Println(\u0026#34;Cow number\u0026#34;, num, \u0026#34;mooed through the mootube\u0026#34;) \u0026lt;-tube fmt.Println(\u0026#34;Cow number\u0026#34;, num, \u0026#34;is being milked and stops mooing\u0026#34;) mootube \u0026lt;- Moo{num, \u0026#34;mooh\u0026#34;, nil} fmt.Println(\u0026#34;Cow number\u0026#34;, num, \u0026#34;moos one last time in relief\u0026#34;) return default: fmt.Println(\u0026#34;Cow number\u0026#34;, num, \u0026#34;mooed through the mootube and was ignored\u0026#34;) time.Sleep(time.Duration(rand.Int31n(1000)) * time.Millisecond) } } } // The farmer wants to turn on all the milktubes to stop the mooing func farmer(numcows int, mootube chan Moo, farmertube chan string) { fmt.Println(\u0026#34;Farmer starts listening to the mootube\u0026#34;) for unrelievedCows := numcows; unrelievedCows \u0026gt; 0; { moo := \u0026lt;-mootube if moo.Sound == \u0026#34;mooh\u0026#34; { fmt.Println(\u0026#34;Farmer heard a moo of relief from cow number\u0026#34;, moo.Cow) unrelievedCows-- } else { fmt.Println(\u0026#34;Farmer heard a\u0026#34;, moo.Sound, \u0026#34;from cow number\u0026#34;, moo.Cow) time.Sleep(2e9) fmt.Println(\u0026#34;Farmer starts the milking machine on cow number\u0026#34;, moo.Cow) moo.Tube \u0026lt;- true } } fmt.Println(\u0026#34;Farmer doesn\u0026#39;t hear a single moo anymore. All done!\u0026#34;) farmertube \u0026lt;- \u0026#34;yey!\u0026#34; } // The farm starts out with mooing cows that wants to be milked func runFarm(numcows int) { farmertube := make(chan string) mootube := make(chan Moo) for cownum := 0; cownum \u0026lt; numcows; cownum++ { go cow(cownum, mootube) } go farmer(numcows, mootube, farmertube) farmerSaid := \u0026lt;-farmertube if farmerSaid == \u0026#34;yey!\u0026#34; { fmt.Println(\u0026#34;All cows are happy.\u0026#34;) } } func main() { runFarm(4) fmt.Println(\u0026#34;done\u0026#34;) } Heading 2 Heading 3 ","parent":"Developer Guide","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/docs/developer-guide/page1/","tags":["docs","howto","page1"],"title":"Sample Page"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"User Guide","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/docs/user-guide/page1/","tags":["docs","howto","user-guide","page1"],"title":"User Guide Page 1"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"Developer Guide","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/docs/developer-guide/page2/","tags":["docs","howto","page2"],"title":"Developer Guide Page 2"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"FAQ Section 1","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/faq/section1/faq1-2/","tags":["faq"],"title":"FAQ Page 1.2"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"FAQ","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/faq/faq2/","tags":["docs","howto"],"title":"FAQ Page 2"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"User Guide","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/docs/user-guide/page2/","tags":["docs","howto","page2"],"title":"User Guide Page 2"},{"categories":null,"contents":"Heading 1 Heading 2 Heading 3 ","parent":"Architecture","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/docs/architecture/demo/","tags":["docs","howto"],"title":"Arch Page 1"},{"categories":null,"contents":"Lines with decorations   var generatedDiagram = markdeep.formatDiagram(\"\\n ________ o * * .--------------. \\n *---\\x2b---. | | o o | ^ \\\\ \\/ | .----------. | \\n | | \\x27--* -\\x2b- | | v \\/ \\\\ \\/ | | \\x3c------. | | \\n | \\x27-----\\x3e .---(---\\x27 ---\\x3e*\\x3c--- \\/ .\\x2b-\\x3e*\\x3c--o----\\x27 | | | | | \\n \\x3c--\\x27 ^ ^ | | | | | ^ \\\\ | \\x27--------\\x27 | | \\n \\\\\\/ *-----\\x27 o |\\x3c-----\\x3e| \\x27-----\\x27 |__| v \\x27------------\\x27 | \\n \\/\\\\ *---------------\\x27 \\n ◌------○ ◍------● \\n\"); $(\"#fc894eff865b5a855f72aed4c76695f9a7617bdb\").html(generatedDiagram);  Overlaps and Intersections   var generatedDiagram = markdeep.formatDiagram(\"\\n \\n .-. .-. .-. .-. .-. .-. \\n | | | | | | | | | | | | \\n .---------. .--\\x2b---\\x2b--. .--\\x2b---\\x2b--. .--| |--. .--\\x2b \\x2b--. .------|--. \\n | | | | | | | | | | | | | | | | | | \\n \\x27---------\\x27 \\x27--\\x2b---\\x2b--\\x27 \\x27--\\x2b---\\x2b--\\x27 \\x27--| |--\\x27 \\x27--\\x2b \\x2b--\\x27 \\x27--|------\\x27 \\n | | | | | | | | | | | | \\n \\x27-\\x27 \\x27-\\x27 \\x27-\\x27 \\x27-\\x27 \\x27-\\x27 \\x27-\\x27 \\n\"); $(\"#58e3c8861401d2c2e6451cc099b19aea7686d7bd\").html(generatedDiagram);  Flow chart   var generatedDiagram = markdeep.formatDiagram(\"\\n\\n . \\n .---------. \\/ \\\\ \\n | START | \\/ \\\\ .-\\x2b-------\\x2b-. ___________ \\n \\x27----\\x2b----\\x27 .-------. A \\/ \\\\ B | |COMPLEX| | \\/ \\\\ .-. \\n | | END |\\x3c-----\\x2bCHOICE \\x2b-----\\x3e| | | \\x2b---\\x3e\\x2b PREPARATION \\x2b---\\x3e| X | \\n v \\x27-------\\x27 \\\\ \\/ | |PROCESS| | \\\\___________\\/ \\x27-\\x27 \\n .---------. \\\\ \\/ \\x27-\\x2b---\\x2b---\\x2b-\\x27 \\n \\/ INPUT \\/ \\\\ \\/ \\n \\x27-----\\x2b---\\x27 \\x27 \\n | ^ \\n v | \\n .-----------. .-----\\x2b-----. .-. \\n | PROCESS \\x2b----------------\\x3e| PROCESS |\\x3c------\\x2b X | \\n \\x27-----------\\x27 \\x27-----------\\x27 \\x27-\\x27 \\n \\n\"); $(\"#e0bb8a7da1e8d64e079d8d0553011dd83aee09c5\").html(generatedDiagram);  Simple plot diagram   var generatedDiagram = markdeep.formatDiagram(\"\\n\\n ▲\\n Uin ┊ .------------------------\\n ┊ | \\n ┊ | \\n *---\\x27┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄▶\\n \\n Udc▲ \\n Udc_OK ┊ .---------------------\\n ┊ \\/ : \\n ┊ \\/ : \\n *---\\x27┄┄┄┄:┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄▶\\n :\\x3c-----\\x3e: \\n ▲ 500ms : \\n ┊ : \\nCpu.Qon ┊┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄.-----------\\n ┊ | Inactive \\n ┊ Active | \\n *----------------\\x27┄┄┄┄┄┄┄┄┄┄┄▶\\n \\n\\n\"); $(\"#daf981902934729c08abe96507f75d54d8c4d15f\").html(generatedDiagram);  Line ends   var generatedDiagram = markdeep.formatDiagram(\"\\n \\n o--o *--o \\/ \\/ * o o o o o * * * * o o o o * * * * o o o o * * * * \\n o--* *--* v v ^ ^ | | | | | | | | \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\/ \\/ \\/ \\/ \\/ \\/ \\/ \\/ \\n o--\\x3e *--\\x3e * o \\/ \\/ o * v \\x27 o * v \\x27 o * v \\\\ o * v \\\\ o * v \\/ o * v \\/ \\n o--- *--- \\n ^ ^ ^ ^ . . . . ^ ^ ^ ^ \\\\ \\\\ \\\\ \\\\ ^ ^ ^ ^ \\/ \\/ \\/ \\/ \\n | | * o \\\\ \\\\ * o | | | | | | | | \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\/ \\/ \\/ \\/ \\/ \\/ \\/ \\/ \\n v v ^ ^ v v ^ ^ o * v \\x27 o * v \\x27 o * v \\\\ o * v \\\\ o * v \\/ o * v \\/ \\n * o | | * o \\\\ \\\\ \\n \\n \\x3c--o \\x3c--* \\x3c--\\x3e \\x3c--- ---o ---* ---\\x3e ---- *\\x3c-- o\\x3c-- --\\x3eo --\\x3e* \\n \\n\"); $(\"#7ae3fa0cd57cb69c2097935639d6f6d8b8c86421\").html(generatedDiagram);  Small Grids   var generatedDiagram = markdeep.formatDiagram(\"\\n ___ ___ .---\\x2b---\\x2b---\\x2b---\\x2b---. .---\\x2b---\\x2b---\\x2b---. .---. .---. \\n ___\\/ \\\\___\\/ \\\\ | | | | | | \\/ \\\\ \\/ \\\\ \\/ \\\\ \\/ \\\\ \\/ | \\x2b---\\x2b | \\n \\/ \\\\___\\/ \\\\___\\/ \\x2b---\\x2b---\\x2b---\\x2b---\\x2b---\\x2b \\x2b---\\x2b---\\x2b---\\x2b---\\x2b \\x2b---\\x2b \\x2b---\\x2b \\n \\\\___\\/ b \\\\___\\/ \\\\ | | | b | | | \\\\ \\/ \\\\a\\/ \\\\b\\/ \\\\ \\/ \\\\ | \\x2b---\\x2b | \\n \\/ a \\\\___\\/ \\\\___\\/ \\x2b---\\x2b---\\x2b---\\x2b---\\x2b---\\x2b \\x2b---\\x2b---\\x2b---\\x2b---\\x2b \\x2b---\\x2b b \\x2b---\\x2b \\n \\\\___\\/ \\\\___\\/ \\\\ | | a | | | | \\/ \\\\ \\/ \\\\ \\/ \\\\ \\/ \\\\ \\/ | a \\x2b---\\x2b | \\n \\\\___\\/ \\\\___\\/ \\x27---\\x2b---\\x2b---\\x2b---\\x2b---\\x27 \\x27---\\x2b---\\x2b---\\x2b---\\x27 \\x27---\\x27 \\x27---\\x27 \\n \\n\"); $(\"#23e17d4905629ea89819a1077a1eb45561c49244\").html(generatedDiagram);  Graphics Diagram   var generatedDiagram = markdeep.formatDiagram(\"\\n . \\n 0 3 P * Eye \\/ ^ \\/ \\n *-------* \\x2by \\\\ \\x2b) \\\\ \\/ Reflection \\n 1 \\/| 2 \\/| ^ \\\\ \\\\ \\\\ v \\n *-------* | | v0 \\\\ v3 --------*-------- \\n | |4 | |7 | ◄╮ *----\\\\-----* \\n | *-----|-* ⤹ \\x2b-----\\x3e \\x2bx \\/ v X \\\\ .-.\\x3c-------- o \\n |\\/ |\\/ \\/ ⤴ \\/ o \\\\ | \\/ | Refraction \\/ \\\\ \\n *-------* v \\/ \\\\ \\x2b-\\x27 \\/ \\\\ \\n 5 6 \\x2bz v1 *------------------* v2 | o-----o \\n v \\n\\n\"); $(\"#6f4f8da5404c08bb6cda32fbc301316914bd3c85\").html(generatedDiagram);  ","parent":"Diagrams","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/docs/diagrams/markdeep/","tags":["diagram","markdeep"],"title":"Markdeep examples"},{"categories":null,"contents":"Graph graph TD; A--\u0026gt;B; A--\u0026gt;C; A--\u0026gt;D;  graph TD; A--B; A--C; A--D;  graph LR A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two]  graph LR A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two]  Sequence diagram sequenceDiagram autonumber Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  sequenceDiagram autonumber Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts! John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good!  Class diagram classDiagram Customer \u0026#34;1\u0026#34; --\u0026gt; \u0026#34;*\u0026#34; Ticket Student \u0026#34;1\u0026#34; --\u0026gt; \u0026#34;1..*\u0026#34; Course Galaxy --\u0026gt; \u0026#34;many\u0026#34; Star : Contains  classDiagram Customer \"1\" -- \"*\" Ticket Student \"1\" -- \"1..*\" Course Galaxy -- \"many\" Star : Contains  State diagram stateDiagram [*] --\u0026gt; Active state Active { [*] --\u0026gt; NumLockOff NumLockOff --\u0026gt; NumLockOn : EvNumLockPressed NumLockOn --\u0026gt; NumLockOff : EvNumLockPressed -- [*] --\u0026gt; CapsLockOff CapsLockOff --\u0026gt; CapsLockOn : EvCapsLockPressed CapsLockOn --\u0026gt; CapsLockOff : EvCapsLockPressed -- [*] --\u0026gt; ScrollLockOff ScrollLockOff --\u0026gt; ScrollLockOn : EvCapsLockPressed ScrollLockOn --\u0026gt; ScrollLockOff : EvCapsLockPressed }  stateDiagram [*] -- Active state Active { [*] -- NumLockOff NumLockOff -- NumLockOn : EvNumLockPressed NumLockOn -- NumLockOff : EvNumLockPressed -- [*] -- CapsLockOff CapsLockOff -- CapsLockOn : EvCapsLockPressed CapsLockOn -- CapsLockOff : EvCapsLockPressed -- [*] -- ScrollLockOff ScrollLockOff -- ScrollLockOn : EvCapsLockPressed ScrollLockOn -- ScrollLockOff : EvCapsLockPressed }  Gantt diagram gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h  gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h  Pie diagram pie title Key elements in Product X \u0026#34;Calcium\u0026#34; : 42.96 \u0026#34;Potassium\u0026#34; : 50.05 \u0026#34;Magnesium\u0026#34; : 10.01 \u0026#34;Iron\u0026#34; : 5  pie title Key elements in Product X \"Calcium\" : 42.96 \"Potassium\" : 50.05 \"Magnesium\" : 10.01 \"Iron\" : 5  ","parent":"Diagrams","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/docs/diagrams/mermaid/","tags":["diagram","mermaid"],"title":"Mermaid examples"},{"categories":null,"contents":"Petstore API displayed using Swagger UI\n .information-container, .scheme-container { display: none !important; }   window.onload = function() { const ui = SwaggerUIBundle({ spec: {\"components\":{\"schemas\":{\"Error\":{\"properties\":{\"code\":{\"format\":\"int32\",\"type\":\"integer\"},\"message\":{\"type\":\"string\"}},\"required\":[\"code\",\"message\"],\"type\":\"object\"},\"NewPet\":{\"properties\":{\"name\":{\"type\":\"string\"},\"tag\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"Pet\":{\"allOf\":[{\"$ref\":\"#/components/schemas/NewPet\"},{\"properties\":{\"id\":{\"format\":\"int64\",\"type\":\"integer\"}},\"required\":[\"id\"],\"type\":\"object\"}]}}},\"info\":{\"contact\":{\"email\":\"apiteam@swagger.io\",\"name\":\"Swagger API Team\",\"url\":\"http://swagger.io\"},\"description\":\"A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\",\"license\":{\"name\":\"Apache 2.0\",\"url\":\"https://www.apache.org/licenses/LICENSE-2.0.html\"},\"termsOfService\":\"http://swagger.io/terms/\",\"title\":\"Swagger Petstore\",\"version\":\"1.0.0\"},\"openapi\":\"3.0.0\",\"paths\":{\"/pets\":{\"get\":{\"description\":\"Returns all pets from the system that the user has access to\\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\\n\",\"operationId\":\"findPets\",\"parameters\":[{\"description\":\"tags to filter by\",\"in\":\"query\",\"name\":\"tags\",\"required\":false,\"schema\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"style\":\"form\"},{\"description\":\"maximum number of results to return\",\"in\":\"query\",\"name\":\"limit\",\"required\":false,\"schema\":{\"format\":\"int32\",\"type\":\"integer\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"items\":{\"$ref\":\"#/components/schemas/Pet\"},\"type\":\"array\"}}},\"description\":\"pet response\"},\"default\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}},\"description\":\"unexpected error\"}}},\"post\":{\"description\":\"Creates a new pet in the store. Duplicates are allowed\",\"operationId\":\"addPet\",\"requestBody\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/NewPet\"}}},\"description\":\"Pet to add to the store\",\"required\":true},\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Pet\"}}},\"description\":\"pet response\"},\"default\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}},\"description\":\"unexpected error\"}}}},\"/pets/{id}\":{\"delete\":{\"description\":\"deletes a single pet based on the ID supplied\",\"operationId\":\"deletePet\",\"parameters\":[{\"description\":\"ID of pet to delete\",\"in\":\"path\",\"name\":\"id\",\"required\":true,\"schema\":{\"format\":\"int64\",\"type\":\"integer\"}}],\"responses\":{\"204\":{\"description\":\"pet deleted\"},\"default\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}},\"description\":\"unexpected error\"}}},\"get\":{\"description\":\"Returns a user based on a single ID, if the user does not have access to the pet\",\"operationId\":\"find pet by id\",\"parameters\":[{\"description\":\"ID of pet to fetch\",\"in\":\"path\",\"name\":\"id\",\"required\":true,\"schema\":{\"format\":\"int64\",\"type\":\"integer\"}}],\"responses\":{\"200\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Pet\"}}},\"description\":\"pet response\"},\"default\":{\"content\":{\"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/Error\"}}},\"description\":\"unexpected error\"}}}}},\"servers\":[{\"url\":\"http://petstore.swagger.io/api\"}]}, dom_id: '#swagger-ui', deepLinking: true, validatorUrl: null, displayOperationId: true, showCommonExtensions: true, supportedSubmitMethods: [], presets: [ SwaggerUIBundle.presets.apis ], plugins: [ ], layout: \"BaseLayout\" }); window.ui = ui }  ","parent":"Open API","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/docs/openapi/petstore/","tags":["openapi"],"title":"Petstore APIs"},{"categories":null,"contents":"","parent":"Cover","permalink":"https://git.corp.adobe.com/pages/reef/hugo-spectrum/search/","tags":null,"title":"Search Results"}]